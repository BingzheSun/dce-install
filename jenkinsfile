pipeline {
    agent any
    environment {
        machine_mng="/var/jenkins_home/workspace/dce-install/govmomi/hosts-mng.sh"
        hosts="/var/jenkins_home/workspace/dce-install/single-ansible/hosts"
        install_os="/var/jenkins_home/workspace/dce-install/single-ansible/books/install-os-requirements.yaml"
        install_masterone="/var/jenkins_home/workspace/dce-install/single-ansible/books/install-masterone.yaml"
        join_mastertwo="/var/jenkins_home/workspace/dce-install/single-ansible/books/join-mastertwo.yaml"
        join_masterthree="/var/jenkins_home/workspace/dce-install/single-ansible/books/join-masterthree.yaml"
        join_worker="/var/jenkins_home/workspace/dce-install/single-ansible/books/join-worker.yaml"
        license="/var/jenkins_home/workspace/dce-install/single-ansible/books/license.yaml"
    }

    stages {
        stage('get scripts') {
            steps {
	    	checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: '19ae18a1-2dfa-4244-bf85-fc7165284130', url: 'https://github.com/BingzheSun/dce-install']]])
                sh 'cd /root/workspace/dce-install'
                sh 'ls'
            }
        }
        stage('repare machine') {
            steps {            
                sh 'bash ${machine_mng}'
            }
        }
        stage('install os-requirements') {
            steps {            
                ansiblePlaybook (
                    inventory: '${hosts}',
                    colorized: true,
                    playbook: '${install_os}',
                    // extras: '--syntax-check' 
                )   
            }
        }
        stage('install first master') {
            steps {            
                ansiblePlaybook (
                    inventory: '${hosts}',
                    colorized: true,
                    playbook: '${install_masterone}',
                    // extras: '--syntax-check' 
                )   
            }
        }
        stage('join mastertwo') {
            steps {            
                ansiblePlaybook (
                    inventory: '${hosts}',
                    colorized: true,
                    playbook: '${join_mastertwo}',
                    // extras: '--syntax-check' 
                )   
            }
        }
        stage('join masterthree') {
            steps {            
                ansiblePlaybook (
                    inventory: '${hosts}',
                    colorized: true,
                    playbook: '${join_masterthree}',
                    // extras: '--syntax-check' 
                )   
            }
        }
        stage('join workers') {
            steps {
                ansiblePlaybook (
                    inventory: '${hosts}',
                    colorized: true,
                    playbook: '${join_worker}',
                    // extras: '--syntax-check'
                )
            }
        }
        stage('add license') {
            steps {            
                ansiblePlaybook (
                    inventory: '${hosts}',
                    colorized: true,
                    playbook: '${license}',
                    // extras: '--syntax-check' 
                )   
            }
        }
    }
}

